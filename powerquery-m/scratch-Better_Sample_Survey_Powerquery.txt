let
    Source = Json.Document(File.Contents("C:\Users\Ted\Documents\GitHub\sandbox\r\qsffiles\QualtricsTools-master\data\Sample Surveys\Better Sample Survey\Better_Sample_Survey.qsf")),
    SurveyElements1 = Source[SurveyElements],
    SurveyElements_0 = Table.ExpandRecordColumn(SurveyElements1, "SurveyElements", {"SurveyID", "Element", "PrimaryAttribute", "SecondaryAttribute", "TertiaryAttribute", "Payload"})
in
    SurveyElements_0


/* Modified on 2023-07-08 from https://stackoverflow.com/a/60421392 */
let
    Source = Json.Document(File.Contents("C:\Users\Ted\Documents\GitHub\sandbox\r\qsffiles\QualtricsTools-master\data\Sample Surveys\Better Sample Survey\Better_Sample_Survey.qsf")),
    SurveyElements1 = Table.FromList(Source[SurveyElements], Splitter.SplitByNothing()),
    SurveyElements2 = Table.ExpandRecordColumn(SurveyElements1, "Column1", {"SurveyID", "Element", "PrimaryAttribute", "SecondaryAttribute", "TertiaryAttribute", "Payload"}, {"SurveyID", "Element", "PrimaryAttribute", "SecondaryAttribute", "TertiaryAttribute", "Payload"})
in
    SurveyElements2


/* Modified on 2023-07-08 from https://stackoverflow.com/a/60421392 */
let
    Source = Json.Document(File.Contents("C:\Users\Ted\Documents\GitHub\sandbox\r\qsffiles\QualtricsTools-master\data\Sample Surveys\Better Sample Survey\Better_Sample_Survey.qsf")),
    SurveyElements1 = Table.FromList(Source[SurveyElements], Splitter.SplitByNothing()),
    SurveyElements2 = Table.ExpandRecordColumn(SurveyElements1, "Column1", {"SurveyID", "Element", "PrimaryAttribute", "SecondaryAttribute", "TertiaryAttribute", "Payload"}, {"SurveyID", "Element", "PrimaryAttribute", "SecondaryAttribute", "TertiaryAttribute", "Payload"})
in
    SurveyElements2




/* To get QuestionIDs of questions in trash */
let
    Source = Json.Document(File.Contents("C:\Users\Ted\Documents\GitHub\sandbox\r\qsffiles\QualtricsTools-master\data\Sample Surveys\Better Sample Survey\Better_Sample_Survey.qsf")),
    SurveyElements1 = Table.FromList(Source[SurveyElements], Splitter.SplitByNothing()),
    SurveyElements2 = Table.ExpandRecordColumn(SurveyElements1, "Column1", {"SurveyID", "Element", "PrimaryAttribute", "SecondaryAttribute", "TertiaryAttribute", "Payload"}, {"SurveyID", "Element", "PrimaryAttribute", "SecondaryAttribute", "TertiaryAttribute", "Payload"}),
    SurveyBlocks = Table.SelectRows(SurveyElements2, each [Element] = "BL"),
    SurveyBlocksPayload = Table.ExpandListColumn(SurveyBlocks, "Payload"),
    SurveyBlocksPayloadPayload = Table.ExpandRecordColumn(SurveyBlocksPayload, "Payload", {"Type", "Description", "ID", "BlockElements"}),
    SurveyBlocks_Trash = Table.SelectRows(SurveyBlocksPayloadPayload, each [Type] = "Trash"),
    SurveyBlocks_Trash2 = Table.ExpandListColumn(Table.SelectColumns(SurveyBlocks_Trash, {"BlockElements"}), "BlockElements"),
    SurveyBlocks_Trash3 = Table.ExpandRecordColumn(SurveyBlocks_Trash2, "BlockElements", {"Type", "QuestionID"}),
    SurveyBlocks_Trash_IDs = Table.SelectColumns(SurveyBlocks_Trash3, {"QuestionID"})
in
    SurveyBlocks_Trash_IDs



/* To add a new column with the row numbers (starting at 1, incrementing by 1 */
/* NB: Default initial value for index column is 0 */
let
    Source = Json.Document(File.Contents("C:\Users\Ted\Documents\GitHub\sandbox\r\qsffiles\QualtricsTools-master\data\Sample Surveys\Better Sample Survey\Better_Sample_Survey.qsf")),
    SurveyElements1 = Table.FromList(Source[SurveyElements], Splitter.SplitByNothing()),
    SurveyElements2 = Table.ExpandRecordColumn(SurveyElements1, "Column1", {"SurveyID", "Element", "PrimaryAttribute", "SecondaryAttribute", "TertiaryAttribute", "Payload"}, {"SurveyID", "Element", "PrimaryAttribute", "SecondaryAttribute", "TertiaryAttribute", "Payload"}),
    SurveyBlocks = Table.SelectRows(SurveyElements2, each [Element] = "BL"),
    SurveyBlocksPayload = Table.ExpandListColumn(SurveyBlocks, "Payload"),
    SurveyBlocksPayloadPayload = Table.ExpandRecordColumn(SurveyBlocksPayload, "Payload", {"Type", "Description", "ID", "BlockElements"}),
    SurveyBlocks_FirstQuestionBlock = Table.ExpandRecordColumn(Table.ExpandListColumn(Table.SelectColumns(Table.SelectRows(SurveyBlocksPayloadPayload, each [Type] = "Default"), "BlockElements"), "BlockElements"), "BlockElements", {"Type", "QuestionID", "SkipLogic"}),
    SurveyBlocks_FirstQuestionBlock2 = Table.AddIndexColumn(SurveyBlocks_FirstQuestionBlock, "QuestionDisplayOrder", 1)
in
    SurveyBlocks_FirstQuestionBlock2




/* To extract skip logic */
let
    Source = Json.Document(File.Contents("C:\Users\Ted\Documents\GitHub\sandbox\r\qsffiles\QualtricsTools-master\data\Sample Surveys\Better Sample Survey\Better_Sample_Survey.qsf")),
    SurveyElements1 = Table.FromList(Source[SurveyElements], Splitter.SplitByNothing()),
    SurveyElements2 = Table.ExpandRecordColumn(SurveyElements1, "Column1", {"SurveyID", "Element", "PrimaryAttribute", "SecondaryAttribute", "TertiaryAttribute", "Payload"}, {"SurveyID", "Element", "PrimaryAttribute", "SecondaryAttribute", "TertiaryAttribute", "Payload"}),
    SurveyBlocks = Table.SelectRows(SurveyElements2, each [Element] = "BL"),
    SurveyBlocksPayload = Table.ExpandListColumn(SurveyBlocks, "Payload"),
    SurveyBlocksPayloadPayload = Table.ExpandRecordColumn(SurveyBlocksPayload, "Payload", {"Type", "Description", "ID", "BlockElements"}),
    SurveyBlocks_FirstQuestionBlock = Table.ExpandRecordColumn(Table.ExpandListColumn(Table.SelectColumns(Table.SelectRows(SurveyBlocksPayloadPayload, each [Type] = "Default"), "BlockElements"), "BlockElements"), "BlockElements", {"Type", "QuestionID", "SkipLogic"}),
    SurveyBlocks_FirstQuestionBlock2 = Table.AddIndexColumn(SurveyBlocks_FirstQuestionBlock, "QuestionDisplayOrder", 1, 1, type number),
    SkipLogic = Table.ExpandRecordColumn(Table.ExpandListColumn(Table.SelectRows(Table.SelectColumns(SurveyBlocks_FirstQuestionBlock2, {"SkipLogic"}), each [SkipLogic] is list), "SkipLogic"), "SkipLogic", {"SkipLogicID", "ChoiceLocator", "Condition", "SkipToDestination", "Locator", "SkipToDescription", "Description", "QuestionID"})
in
    SkipLogic



/* Pull non-trashed survey questions and their payloads */
let
    Source = Json.Document(File.Contents("C:\Users\Ted\Documents\GitHub\sandbox\r\qsffiles\QualtricsTools-master\data\Sample Surveys\Better Sample Survey\Better_Sample_Survey.qsf")),
    SurveyElements1 = Table.FromList(Source[SurveyElements], Splitter.SplitByNothing()),
    SurveyElements2 = Table.ExpandRecordColumn(SurveyElements1, "Column1", {"SurveyID", "Element", "PrimaryAttribute", "SecondaryAttribute", "TertiaryAttribute", "Payload"}, {"SurveyID", "Element", "PrimaryAttribute", "SecondaryAttribute", "TertiaryAttribute", "Payload"}),
    SurveyQuestions = Table.SelectRows(SurveyElements2, each [Element] = "SQ"),
    TrashQuestionIDs = Table.SelectColumns(Table.ExpandRecordColumn(Table.ExpandListColumn(Table.SelectColumns(Table.SelectRows(Table.ExpandRecordColumn(Table.ExpandListColumn(Table.SelectRows(SurveyElements2, each [Element] = "BL"), "Payload"), "Payload", {"Type", "Description", "ID", "BlockElements"}), each [Type] = "Trash"), {"BlockElements"}), "BlockElements"), "BlockElements", {"Type", "QuestionID"}), {"QuestionID"}),
/* Modified on 2023-07-08 from https://stackoverflow.com/a/53200741 */
    SurveyQuestions2 = Table.AddColumn(SurveyQuestions, "IsInTrash", (C) => List.AnyTrue(List.Transform(TrashQuestionIDs[QuestionID], each Text.Contains(C[PrimaryAttribute], _)))),
/*    NonTrashSurveyQuestions = Table.SelectRows(SurveyQuestions2, each ([IsInTrash] = false))*/
    NonTrashSurveyQuestions = Table.SelectColumns(Table.SelectRows(SurveyQuestions2, each ([IsInTrash] = false)), {"SurveyID", "PrimaryAttribute", "SecondaryAttribute", "Payload"})
/*    NonTrashSurveyQuestions = Table.RenameColumns(Table.SelectColumns(Table.SelectRows(SurveyQuestions2, each ([IsInTrash] = false)), {"SurveyID", "PrimaryAttribute", "SecondaryAttribute", "Payload"}), {{"PrimaryAttribute", "QuestionID"}, {"SecondaryAttribute", "QuestionText_First99"}})*/
in
    NonTrashSurveyQuestions



let
    Source = Json.Document(File.Contents("C:\Users\Ted\Documents\GitHub\sandbox\r\qsffiles\QualtricsTools-master\data\Sample Surveys\Better Sample Survey\Better_Sample_Survey.qsf")),
    SurveyElements1 = Table.FromList(Source[SurveyElements], Splitter.SplitByNothing()),
    SurveyElements2 = Table.ExpandRecordColumn(SurveyElements1, "Column1", {"SurveyID", "Element", "PrimaryAttribute", "SecondaryAttribute", "TertiaryAttribute", "Payload"}, {"SurveyID", "Element", "PrimaryAttribute", "SecondaryAttribute", "TertiaryAttribute", "Payload"}),
    SurveyQuestions = Table.SelectRows(SurveyElements2, each [Element] = "SQ"),
    TrashQuestionIDs = Table.SelectColumns(Table.ExpandRecordColumn(Table.ExpandListColumn(Table.SelectColumns(Table.SelectRows(Table.ExpandRecordColumn(Table.ExpandListColumn(Table.SelectRows(SurveyElements2, each [Element] = "BL"), "Payload"), "Payload", {"Type", "Description", "ID", "BlockElements"}), each [Type] = "Trash"), {"BlockElements"}), "BlockElements"), "BlockElements", {"Type", "QuestionID"}), {"QuestionID"}),
/* Modified on 2023-07-08 from https://stackoverflow.com/a/53200741 */
    SurveyQuestions2 = Table.AddColumn(SurveyQuestions, "IsInTrash", (C) => List.AnyTrue(List.Transform(TrashQuestionIDs[QuestionID], each Text.Contains(C[PrimaryAttribute], _)))),
/*    NonTrashSurveyQuestions = Table.SelectColumns(Table.SelectRows(SurveyQuestions2, each ([IsInTrash] = false)), {"SurveyID", "PrimaryAttribute", "SecondaryAttribute", "Payload"}),*/
    NonTrashSurveyQuestions = Table.SelectColumns(Table.SelectRows(SurveyQuestions2, each ([IsInTrash] = false)), {"Payload"}),
/*    NonTrashSurveyQuestionsPayload = Table.ExpandRecordColumn(NonTrashSurveyQuestions, "Payload", {"QuestionText", "DefaultChoices", "DataExportTag", "QuestionType", "Selector", "SubSelector", "Configuration", "QuestionDescription", "Choices", "ChoiceOrder", "Validation", "GradingData", "Language", "Answers", "AnswerOrder", "ChoiceDataExportTags", "QuestionID"})*/
    NonTrashSurveyQuestionsPayload = Table.ReorderColumns(Table.ExpandRecordColumn(NonTrashSurveyQuestions, "Payload", {"QuestionText", "DefaultChoices", "DataExportTag", "QuestionType", "Selector", "SubSelector", "Configuration", "QuestionDescription", "Choices", "ChoiceOrder", "Validation", "GradingData", "Language", "Answers", "AnswerOrder", "ChoiceDataExportTags", "QuestionID"}), {"QuestionID", "QuestionText", "QuestionType", "Selector", "SubSelector", "DefaultChoices", "DataExportTag", "Configuration", "QuestionDescription", "Choices", "ChoiceOrder", "Validation", "GradingData", "Language", "Answers", "AnswerOrder", "ChoiceDataExportTags"})
in
    NonTrashSurveyQuestionsPayload



let
    Source = Json.Document(File.Contents("C:\Users\Ted\Documents\GitHub\sandbox\r\qsffiles\QualtricsTools-master\data\Sample Surveys\Better Sample Survey\Better_Sample_Survey.qsf")),
    SurveyElements1 = Table.FromList(Source[SurveyElements], Splitter.SplitByNothing()),
    SurveyElements2 = Table.ExpandRecordColumn(SurveyElements1, "Column1", {"SurveyID", "Element", "PrimaryAttribute", "SecondaryAttribute", "TertiaryAttribute", "Payload"}, {"SurveyID", "Element", "PrimaryAttribute", "SecondaryAttribute", "TertiaryAttribute", "Payload"}),
    SurveyQuestions = Table.SelectRows(SurveyElements2, each [Element] = "SQ"),
    TrashQuestionIDs = Table.SelectColumns(Table.ExpandRecordColumn(Table.ExpandListColumn(Table.SelectColumns(Table.SelectRows(Table.ExpandRecordColumn(Table.ExpandListColumn(Table.SelectRows(SurveyElements2, each [Element] = "BL"), "Payload"), "Payload", {"Type", "Description", "ID", "BlockElements"}), each [Type] = "Trash"), {"BlockElements"}), "BlockElements"), "BlockElements", {"Type", "QuestionID"}), {"QuestionID"}),
/* Modified on 2023-07-08 from https://stackoverflow.com/a/53200741 */
    SurveyQuestions2 = Table.AddColumn(SurveyQuestions, "IsInTrash", (C) => List.AnyTrue(List.Transform(TrashQuestionIDs[QuestionID], each Text.Contains(C[PrimaryAttribute], _)))),
/*    NonTrashSurveyQuestions = Table.SelectColumns(Table.SelectRows(SurveyQuestions2, each ([IsInTrash] = false)), {"SurveyID", "PrimaryAttribute", "SecondaryAttribute", "Payload"}),*/
    NonTrashSurveyQuestions = Table.SelectColumns(Table.SelectRows(SurveyQuestions2, each ([IsInTrash] = false)), {"Payload"}),
/*    NonTrashSurveyQuestionsPayload = Table.ExpandRecordColumn(NonTrashSurveyQuestions, "Payload", {"QuestionText", "DefaultChoices", "DataExportTag", "QuestionType", "Selector", "SubSelector", "Configuration", "QuestionDescription", "Choices", "ChoiceOrder", "Validation", "GradingData", "Language", "Answers", "AnswerOrder", "ChoiceDataExportTags", "QuestionID"})*/
    NonTrashSurveyQuestionsPayload = Table.ReorderColumns(Table.ExpandRecordColumn(NonTrashSurveyQuestions, "Payload", {"QuestionText", "DefaultChoices", "DataExportTag", "QuestionType", "Selector", "SubSelector", "Configuration", "QuestionDescription", "Choices", "ChoiceOrder", "Validation", "GradingData", "Language", "Answers", "AnswerOrder", "ChoiceDataExportTags", "QuestionID"}), {"QuestionID", "QuestionText", "QuestionType", "Selector", "SubSelector", "DefaultChoices", "DataExportTag", "Configuration", "QuestionDescription", "Choices", "ChoiceOrder", "Validation", "GradingData", "Language", "Answers", "AnswerOrder", "ChoiceDataExportTags"}),
/*    #"Merged Queries" = Table.NestedJoin(NonTrashSurveyQuestionsPayload, {"QuestionID"}, SurveyBlocks_FirstQuestionBlock_DisplayOrder, {"QuestionID"}, "SurveyBlocks_FirstQuestionBlock_DisplayOrder", JoinKind.RightOuter),*/
/*    #"Expanded SurveyBlocks_FirstQuestionBlock_DisplayOrder" = Table.ExpandTableColumn(#"Merged Queries", "SurveyBlocks_FirstQuestionBlock_DisplayOrder", {"QuestionDisplayOrder"}, {"QuestionDisplayOrder"})*/
    NonTrashSurveyQuestionsPayloadOrdered = Table.ExpandTableColumn(Table.NestedJoin(NonTrashSurveyQuestionsPayload, {"QuestionID"}, SurveyBlocks_FirstQuestionBlock_DisplayOrder, {"QuestionID"}, "SurveyBlocks_FirstQuestionBlock_DisplayOrder", JoinKind.RightOuter), "SurveyBlocks_FirstQuestionBlock_DisplayOrder", {"QuestionDisplayOrder"}, {"QuestionDisplayOrder"}),
    NonTrashSurveyQuestionsPayloadOrderedSorted = Table.Sort(NonTrashSurveyQuestionsPayloadOrdered,{{"QuestionDisplayOrder", Order.Ascending}})
in
    NonTrashSurveyQuestionsPayloadOrderedSorted


let
    Source = Json.Document(File.Contents("C:\Users\Ted\Documents\GitHub\sandbox\r\qsffiles\QualtricsTools-master\data\Sample Surveys\Better Sample Survey\Better_Sample_Survey.qsf")),
    SurveyElements1 = Table.FromList(Source[SurveyElements], Splitter.SplitByNothing()),
    SurveyElements2 = Table.ExpandRecordColumn(SurveyElements1, "Column1", {"SurveyID", "Element", "PrimaryAttribute", "SecondaryAttribute", "TertiaryAttribute", "Payload"}, {"SurveyID", "Element", "PrimaryAttribute", "SecondaryAttribute", "TertiaryAttribute", "Payload"}),
    SurveyQuestions = Table.SelectRows(SurveyElements2, each [Element] = "SQ"),
    TrashQuestionIDs = Table.SelectColumns(Table.ExpandRecordColumn(Table.ExpandListColumn(Table.SelectColumns(Table.SelectRows(Table.ExpandRecordColumn(Table.ExpandListColumn(Table.SelectRows(SurveyElements2, each [Element] = "BL"), "Payload"), "Payload", {"Type", "Description", "ID", "BlockElements"}), each [Type] = "Trash"), {"BlockElements"}), "BlockElements"), "BlockElements", {"Type", "QuestionID"}), {"QuestionID"}),
/* Modified on 2023-07-08 from https://stackoverflow.com/a/53200741 */
    SurveyQuestions2 = Table.AddColumn(SurveyQuestions, "IsInTrash", (C) => List.AnyTrue(List.Transform(TrashQuestionIDs[QuestionID], each Text.Contains(C[PrimaryAttribute], _)))),
    NonTrashSurveyQuestions = Table.SelectColumns(Table.SelectRows(SurveyQuestions2, each ([IsInTrash] = false)), {"Payload"}),
    NonTrashSurveyQuestionsPayload = Table.ReorderColumns(Table.ExpandRecordColumn(NonTrashSurveyQuestions, "Payload", {"QuestionText", "DefaultChoices", "DataExportTag", "QuestionType", "Selector", "SubSelector", "Configuration", "QuestionDescription", "Choices", "ChoiceOrder", "Validation", "GradingData", "Language", "Answers", "AnswerOrder", "ChoiceDataExportTags", "QuestionID"}), {"QuestionID", "QuestionText", "QuestionType", "Selector", "SubSelector", "DefaultChoices", "DataExportTag", "Configuration", "QuestionDescription", "Choices", "ChoiceOrder", "Validation", "GradingData", "Language", "Answers", "AnswerOrder", "ChoiceDataExportTags"}),
    NonTrashSurveyQuestionsPayloadOrdered = Table.ExpandTableColumn(Table.NestedJoin(NonTrashSurveyQuestionsPayload, {"QuestionID"}, SurveyBlocks_FirstQuestionBlock_DisplayOrder, {"QuestionID"}, "SurveyBlocks_FirstQuestionBlock_DisplayOrder", JoinKind.RightOuter), "SurveyBlocks_FirstQuestionBlock_DisplayOrder", {"QuestionDisplayOrder"}, {"QuestionDisplayOrder"}),
    NonTrashSurveyQuestionsPayloadOrderedSorted = Table.Sort(NonTrashSurveyQuestionsPayloadOrdered,{{"QuestionDisplayOrder", Order.Ascending}}),
    NTSQPOS_Configuration = Table.ExpandRecordColumn(Table.SelectColumns(NonTrashSurveyQuestionsPayloadOrderedSorted, {"QuestionID", "Configuration"}), "Configuration", {"QuestionDescriptionOption", "TextPosition", "ChoiceColumnWidth", "RepeatHeaders", "WhiteSpace", "MobileFirst"})
in
    NTSQPOS_Configuration


let
    Source = Json.Document(File.Contents("C:\Users\Ted\Documents\GitHub\sandbox\r\qsffiles\QualtricsTools-master\data\Sample Surveys\Better Sample Survey\Better_Sample_Survey.qsf")),
    SurveyElements1 = Table.FromList(Source[SurveyElements], Splitter.SplitByNothing()),
    SurveyElements2 = Table.ExpandRecordColumn(SurveyElements1, "Column1", {"SurveyID", "Element", "PrimaryAttribute", "SecondaryAttribute", "TertiaryAttribute", "Payload"}, {"SurveyID", "Element", "PrimaryAttribute", "SecondaryAttribute", "TertiaryAttribute", "Payload"}),
    SurveyQuestions = Table.SelectRows(SurveyElements2, each [Element] = "SQ"),
    TrashQuestionIDs = Table.SelectColumns(Table.ExpandRecordColumn(Table.ExpandListColumn(Table.SelectColumns(Table.SelectRows(Table.ExpandRecordColumn(Table.ExpandListColumn(Table.SelectRows(SurveyElements2, each [Element] = "BL"), "Payload"), "Payload", {"Type", "Description", "ID", "BlockElements"}), each [Type] = "Trash"), {"BlockElements"}), "BlockElements"), "BlockElements", {"Type", "QuestionID"}), {"QuestionID"}),
/* Modified on 2023-07-08 from https://stackoverflow.com/a/53200741 */
    SurveyQuestions2 = Table.AddColumn(SurveyQuestions, "IsInTrash", (C) => List.AnyTrue(List.Transform(TrashQuestionIDs[QuestionID], each Text.Contains(C[PrimaryAttribute], _)))),
    NonTrashSurveyQuestions = Table.SelectColumns(Table.SelectRows(SurveyQuestions2, each ([IsInTrash] = false)), {"Payload"}),
    NonTrashSurveyQuestionsPayload = Table.ReorderColumns(Table.ExpandRecordColumn(NonTrashSurveyQuestions, "Payload", {"QuestionText", "DefaultChoices", "DataExportTag", "QuestionType", "Selector", "SubSelector", "Configuration", "QuestionDescription", "Choices", "ChoiceOrder", "Validation", "GradingData", "Language", "Answers", "AnswerOrder", "ChoiceDataExportTags", "QuestionID"}), {"QuestionID", "QuestionText", "QuestionType", "Selector", "SubSelector", "DefaultChoices", "DataExportTag", "Configuration", "QuestionDescription", "Choices", "ChoiceOrder", "Validation", "GradingData", "Language", "Answers", "AnswerOrder", "ChoiceDataExportTags"}),
    NonTrashSurveyQuestionsPayloadOrdered = Table.ExpandTableColumn(Table.NestedJoin(NonTrashSurveyQuestionsPayload, {"QuestionID"}, SurveyBlocks_FirstQuestionBlock_DisplayOrder, {"QuestionID"}, "SurveyBlocks_FirstQuestionBlock_DisplayOrder", JoinKind.RightOuter), "SurveyBlocks_FirstQuestionBlock_DisplayOrder", {"QuestionDisplayOrder"}, {"QuestionDisplayOrder"}),
    NonTrashSurveyQuestionsPayloadOrderedSorted = Table.Sort(NonTrashSurveyQuestionsPayloadOrdered,{{"QuestionDisplayOrder", Order.Ascending}}),
    NTSQPOS_Choices = Table.ExpandRecordColumn(Table.SelectColumns(NonTrashSurveyQuestionsPayloadOrderedSorted, {"QuestionID", "Choices"}), "Choices", {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25"})
in
    NTSQPOS_Choices



let
    Source = Json.Document(File.Contents("C:\Users\Ted\Documents\GitHub\sandbox\r\qsffiles\QualtricsTools-master\data\Sample Surveys\Better Sample Survey\Better_Sample_Survey.qsf")),
    SurveyElements1 = Table.FromList(Source[SurveyElements], Splitter.SplitByNothing()),
    SurveyElements2 = Table.ExpandRecordColumn(SurveyElements1, "Column1", {"SurveyID", "Element", "PrimaryAttribute", "SecondaryAttribute", "TertiaryAttribute", "Payload"}, {"SurveyID", "Element", "PrimaryAttribute", "SecondaryAttribute", "TertiaryAttribute", "Payload"}),
    SurveyQuestions = Table.SelectRows(SurveyElements2, each [Element] = "SQ"),
    TrashQuestionIDs = Table.SelectColumns(Table.ExpandRecordColumn(Table.ExpandListColumn(Table.SelectColumns(Table.SelectRows(Table.ExpandRecordColumn(Table.ExpandListColumn(Table.SelectRows(SurveyElements2, each [Element] = "BL"), "Payload"), "Payload", {"Type", "Description", "ID", "BlockElements"}), each [Type] = "Trash"), {"BlockElements"}), "BlockElements"), "BlockElements", {"Type", "QuestionID"}), {"QuestionID"}),
/* Modified on 2023-07-08 from https://stackoverflow.com/a/53200741 */
    SurveyQuestions2 = Table.AddColumn(SurveyQuestions, "IsInTrash", (C) => List.AnyTrue(List.Transform(TrashQuestionIDs[QuestionID], each Text.Contains(C[PrimaryAttribute], _)))),
/*    NonTrashSurveyQuestions = Table.SelectColumns(Table.SelectRows(SurveyQuestions2, each ([IsInTrash] = false)), {"SurveyID", "PrimaryAttribute", "SecondaryAttribute", "Payload"}),*/
    NonTrashSurveyQuestions = Table.SelectColumns(Table.SelectRows(SurveyQuestions2, each ([IsInTrash] = false)), {"Payload"}),
/*    NonTrashSurveyQuestionsPayload = Table.ExpandRecordColumn(NonTrashSurveyQuestions, "Payload", {"QuestionText", "DefaultChoices", "DataExportTag", "QuestionType", "Selector", "SubSelector", "Configuration", "QuestionDescription", "Choices", "ChoiceOrder", "Validation", "GradingData", "Language", "Answers", "AnswerOrder", "ChoiceDataExportTags", "QuestionID"})*/
    NonTrashSurveyQuestionsPayload = Table.ReorderColumns(Table.ExpandRecordColumn(NonTrashSurveyQuestions, "Payload", {"QuestionText", "DefaultChoices", "DataExportTag", "QuestionType", "Selector", "SubSelector", "Configuration", "QuestionDescription", "Choices", "ChoiceOrder", "Validation", "GradingData", "Language", "Answers", "AnswerOrder", "ChoiceDataExportTags", "QuestionID"}), {"QuestionID", "QuestionText", "QuestionType", "Selector", "SubSelector", "DefaultChoices", "DataExportTag", "Configuration", "QuestionDescription", "Choices", "ChoiceOrder", "Validation", "GradingData", "Language", "Answers", "AnswerOrder", "ChoiceDataExportTags"}),
/*    #"Merged Queries" = Table.NestedJoin(NonTrashSurveyQuestionsPayload, {"QuestionID"}, SurveyBlocks_FirstQuestionBlock_DisplayOrder, {"QuestionID"}, "SurveyBlocks_FirstQuestionBlock_DisplayOrder", JoinKind.RightOuter),*/
/*    #"Expanded SurveyBlocks_FirstQuestionBlock_DisplayOrder" = Table.ExpandTableColumn(#"Merged Queries", "SurveyBlocks_FirstQuestionBlock_DisplayOrder", {"QuestionDisplayOrder"}, {"QuestionDisplayOrder"})*/
    NonTrashSurveyQuestionsPayloadOrdered = Table.ExpandTableColumn(Table.NestedJoin(NonTrashSurveyQuestionsPayload, {"QuestionID"}, SurveyBlocks_FirstQuestionBlock_DisplayOrder, {"QuestionID"}, "SurveyBlocks_FirstQuestionBlock_DisplayOrder", JoinKind.RightOuter), "SurveyBlocks_FirstQuestionBlock_DisplayOrder", {"QuestionDisplayOrder"}, {"QuestionDisplayOrder"}),
    #"Sorted Rows" = Table.Sort(NonTrashSurveyQuestionsPayloadOrdered,{{"QuestionDisplayOrder", Order.Ascending}}),
    #"Expanded ChoiceOrder" = Table.ExpandListColumn(#"Sorted Rows", "ChoiceOrder")
in
    #"Expanded ChoiceOrder"




let
    Source = Json.Document(File.Contents("C:\Users\Ted\Documents\GitHub\sandbox\r\qsffiles\QualtricsTools-master\data\Sample Surveys\Better Sample Survey\Better_Sample_Survey.qsf")),
    SurveyElements1 = Table.FromList(Source[SurveyElements], Splitter.SplitByNothing()),
    SurveyElements2 = Table.ExpandRecordColumn(SurveyElements1, "Column1", {"SurveyID", "Element", "PrimaryAttribute", "SecondaryAttribute", "TertiaryAttribute", "Payload"}, {"SurveyID", "Element", "PrimaryAttribute", "SecondaryAttribute", "TertiaryAttribute", "Payload"}),
    SurveyQuestions = Table.SelectRows(SurveyElements2, each [Element] = "SQ"),
    TrashQuestionIDs = Table.SelectColumns(Table.ExpandRecordColumn(Table.ExpandListColumn(Table.SelectColumns(Table.SelectRows(Table.ExpandRecordColumn(Table.ExpandListColumn(Table.SelectRows(SurveyElements2, each [Element] = "BL"), "Payload"), "Payload", {"Type", "Description", "ID", "BlockElements"}), each [Type] = "Trash"), {"BlockElements"}), "BlockElements"), "BlockElements", {"Type", "QuestionID"}), {"QuestionID"}),
/* Modified on 2023-07-08 from https://stackoverflow.com/a/53200741 */
    SurveyQuestions2 = Table.AddColumn(SurveyQuestions, "IsInTrash", (C) => List.AnyTrue(List.Transform(TrashQuestionIDs[QuestionID], each Text.Contains(C[PrimaryAttribute], _)))),
/*    NonTrashSurveyQuestions = Table.SelectColumns(Table.SelectRows(SurveyQuestions2, each ([IsInTrash] = false)), {"SurveyID", "PrimaryAttribute", "SecondaryAttribute", "Payload"}),*/
    NonTrashSurveyQuestions = Table.SelectColumns(Table.SelectRows(SurveyQuestions2, each ([IsInTrash] = false)), {"Payload"}),
/*    NonTrashSurveyQuestionsPayload = Table.ExpandRecordColumn(NonTrashSurveyQuestions, "Payload", {"QuestionText", "DefaultChoices", "DataExportTag", "QuestionType", "Selector", "SubSelector", "Configuration", "QuestionDescription", "Choices", "ChoiceOrder", "Validation", "GradingData", "Language", "Answers", "AnswerOrder", "ChoiceDataExportTags", "QuestionID"})*/
    NonTrashSurveyQuestionsPayload = Table.ReorderColumns(Table.ExpandRecordColumn(NonTrashSurveyQuestions, "Payload", {"QuestionText", "DefaultChoices", "DataExportTag", "QuestionType", "Selector", "SubSelector", "Configuration", "QuestionDescription", "Choices", "ChoiceOrder", "Validation", "GradingData", "Language", "Answers", "AnswerOrder", "ChoiceDataExportTags", "QuestionID"}), {"QuestionID", "QuestionText", "QuestionType", "Selector", "SubSelector", "DefaultChoices", "DataExportTag", "Configuration", "QuestionDescription", "Choices", "ChoiceOrder", "Validation", "GradingData", "Language", "Answers", "AnswerOrder", "ChoiceDataExportTags"}),
/*    #"Merged Queries" = Table.NestedJoin(NonTrashSurveyQuestionsPayload, {"QuestionID"}, SurveyBlocks_FirstQuestionBlock_DisplayOrder, {"QuestionID"}, "SurveyBlocks_FirstQuestionBlock_DisplayOrder", JoinKind.RightOuter),*/
/*    #"Expanded SurveyBlocks_FirstQuestionBlock_DisplayOrder" = Table.ExpandTableColumn(#"Merged Queries", "SurveyBlocks_FirstQuestionBlock_DisplayOrder", {"QuestionDisplayOrder"}, {"QuestionDisplayOrder"})*/
    NonTrashSurveyQuestionsPayloadOrdered = Table.ExpandTableColumn(Table.NestedJoin(NonTrashSurveyQuestionsPayload, {"QuestionID"}, SurveyBlocks_FirstQuestionBlock_DisplayOrder, {"QuestionID"}, "SurveyBlocks_FirstQuestionBlock_DisplayOrder", JoinKind.RightOuter), "SurveyBlocks_FirstQuestionBlock_DisplayOrder", {"QuestionDisplayOrder"}, {"QuestionDisplayOrder"}),
    #"Sorted Rows" = Table.Sort(NonTrashSurveyQuestionsPayloadOrdered,{{"QuestionDisplayOrder", Order.Ascending}}),
    #"Expanded Choices" = Table.ExpandRecordColumn(#"Sorted Rows", "Choices", {"1", "2", "3"}, {"Choices.1", "Choices.2", "Choices.3"}),
    #"Expanded Validation" = Table.ExpandRecordColumn(#"Expanded Choices", "Validation", {"Settings"}, {"Validation.Settings"}),
    #"Expanded Validation.Settings" = Table.ExpandRecordColumn(#"Expanded Validation", "Validation.Settings", {"ForceResponse", "ForceResponseType", "Type"}, {"Validation.Settings.ForceResponse", "Validation.Settings.ForceResponseType", "Validation.Settings.Type"}),
    #"Expanded Answers" = Table.ExpandRecordColumn(#"Expanded Validation.Settings", "Answers", {"1", "2", "3", "4"}, {"Answers.1", "Answers.2", "Answers.3", "Answers.4"}),
    #"Expanded Language" = Table.ExpandListColumn(#"Expanded Answers", "Language"),
    #"Expanded GradingData" = Table.ExpandListColumn(#"Expanded Language", "GradingData"),
    #"Expanded Choices.1" = Table.ExpandRecordColumn(#"Expanded GradingData", "Choices.1", {"Display", "DisplayLogic"}, {"Choices.1.Display", "Choices.1.DisplayLogic"}),
    #"Expanded Choices.2" = Table.ExpandRecordColumn(#"Expanded Choices.1", "Choices.2", {"Display", "DisplayLogic"}, {"Choices.2.Display", "Choices.2.DisplayLogic"}),
    #"Expanded Choices.3" = Table.ExpandRecordColumn(#"Expanded Choices.2", "Choices.3", {"Display", "DisplayLogic"}, {"Choices.3.Display", "Choices.3.DisplayLogic"}),
    #"Expanded Configuration" = Table.ExpandRecordColumn(#"Expanded Choices.3", "Configuration", {"QuestionDescriptionOption", "TextPosition", "ChoiceColumnWidth", "RepeatHeaders", "WhiteSpace", "MobileFirst"}, {"Configuration.QuestionDescriptionOption", "Configuration.TextPosition", "Configuration.ChoiceColumnWidth", "Configuration.RepeatHeaders", "Configuration.WhiteSpace", "Configuration.MobileFirst"}),
    #"Expanded Choices.1.DisplayLogic" = Table.ExpandRecordColumn(#"Expanded Configuration", "Choices.1.DisplayLogic", {"0", "Type", "inPage"}, {"Choices.1.DisplayLogic.0", "Choices.1.DisplayLogic.Type", "Choices.1.DisplayLogic.inPage"}),
    #"Expanded Choices.2.DisplayLogic" = Table.ExpandRecordColumn(#"Expanded Choices.1.DisplayLogic", "Choices.2.DisplayLogic", {"0", "Type", "inPage"}, {"Choices.2.DisplayLogic.0", "Choices.2.DisplayLogic.Type", "Choices.2.DisplayLogic.inPage"}),
    #"Expanded Choices.3.DisplayLogic" = Table.ExpandRecordColumn(#"Expanded Choices.2.DisplayLogic", "Choices.3.DisplayLogic", {"0", "Type", "inPage"}, {"Choices.3.DisplayLogic.0", "Choices.3.DisplayLogic.Type", "Choices.3.DisplayLogic.inPage"}),
    #"Expanded Answers.1" = Table.ExpandRecordColumn(#"Expanded Choices.3.DisplayLogic", "Answers.1", {"Display"}, {"Answers.1.Display"}),
    #"Expanded Answers.2" = Table.ExpandRecordColumn(#"Expanded Answers.1", "Answers.2", {"Display"}, {"Answers.2.Display"}),
    #"Expanded Answers.3" = Table.ExpandRecordColumn(#"Expanded Answers.2", "Answers.3", {"Display"}, {"Answers.3.Display"}),
    #"Expanded Answers.4" = Table.ExpandRecordColumn(#"Expanded Answers.3", "Answers.4", {"Display"}, {"Answers.4.Display"}),
    #"Expanded Choices.1.DisplayLogic.0" = Table.ExpandRecordColumn(#"Expanded Answers.4", "Choices.1.DisplayLogic.0", {"0", "Type"}, {"Choices.1.DisplayLogic.0.0", "Choices.1.DisplayLogic.0.Type"}),
    #"Expanded Choices.1.DisplayLogic.0.0" = Table.ExpandRecordColumn(#"Expanded Choices.1.DisplayLogic.0", "Choices.1.DisplayLogic.0.0", {"LogicType", "QuestionID", "QuestionIsInLoop", "ChoiceLocator", "Operator", "QuestionIDFromLocator", "LeftOperand", "Type", "Description"}, {"Choices.1.DisplayLogic.0.0.LogicType", "Choices.1.DisplayLogic.0.0.QuestionID", "Choices.1.DisplayLogic.0.0.QuestionIsInLoop", "Choices.1.DisplayLogic.0.0.ChoiceLocator", "Choices.1.DisplayLogic.0.0.Operator", "Choices.1.DisplayLogic.0.0.QuestionIDFromLocator", "Choices.1.DisplayLogic.0.0.LeftOperand", "Choices.1.DisplayLogic.0.0.Type", "Choices.1.DisplayLogic.0.0.Description"}),
    #"Expanded Choices.2.DisplayLogic.0" = Table.ExpandRecordColumn(#"Expanded Choices.1.DisplayLogic.0.0", "Choices.2.DisplayLogic.0", {"0", "Type"}, {"Choices.2.DisplayLogic.0.0", "Choices.2.DisplayLogic.0.Type"}),
    #"Expanded Choices.2.DisplayLogic.0.0" = Table.ExpandRecordColumn(#"Expanded Choices.2.DisplayLogic.0", "Choices.2.DisplayLogic.0.0", {"LogicType", "QuestionID", "QuestionIsInLoop", "ChoiceLocator", "Operator", "QuestionIDFromLocator", "LeftOperand", "Type", "Description"}, {"Choices.2.DisplayLogic.0.0.LogicType", "Choices.2.DisplayLogic.0.0.QuestionID", "Choices.2.DisplayLogic.0.0.QuestionIsInLoop", "Choices.2.DisplayLogic.0.0.ChoiceLocator", "Choices.2.DisplayLogic.0.0.Operator", "Choices.2.DisplayLogic.0.0.QuestionIDFromLocator", "Choices.2.DisplayLogic.0.0.LeftOperand", "Choices.2.DisplayLogic.0.0.Type", "Choices.2.DisplayLogic.0.0.Description"}),
    #"Expanded Choices.3.DisplayLogic.0" = Table.ExpandRecordColumn(#"Expanded Choices.2.DisplayLogic.0.0", "Choices.3.DisplayLogic.0", {"0", "Type"}, {"Choices.3.DisplayLogic.0.0", "Choices.3.DisplayLogic.0.Type"}),
    #"Expanded Choices.3.DisplayLogic.0.0" = Table.ExpandRecordColumn(#"Expanded Choices.3.DisplayLogic.0", "Choices.3.DisplayLogic.0.0", {"LogicType", "QuestionID", "QuestionIsInLoop", "ChoiceLocator", "Operator", "QuestionIDFromLocator", "LeftOperand", "Type", "Description"}, {"Choices.3.DisplayLogic.0.0.LogicType", "Choices.3.DisplayLogic.0.0.QuestionID", "Choices.3.DisplayLogic.0.0.QuestionIsInLoop", "Choices.3.DisplayLogic.0.0.ChoiceLocator", "Choices.3.DisplayLogic.0.0.Operator", "Choices.3.DisplayLogic.0.0.QuestionIDFromLocator", "Choices.3.DisplayLogic.0.0.LeftOperand", "Choices.3.DisplayLogic.0.0.Type", "Choices.3.DisplayLogic.0.0.Description"})
in
    #"Expanded Choices.3.DisplayLogic.0.0"






let
    Source = Json.Document(File.Contents("C:\Users\Ted\Documents\GitHub\sandbox\r\qsffiles\QualtricsTools-master\data\Sample Surveys\Better Sample Survey\Better_Sample_Survey.qsf")),
    SurveyElements1 = Table.FromList(Source[SurveyElements], Splitter.SplitByNothing()),
    SurveyElements2 = Table.ExpandRecordColumn(SurveyElements1, "Column1", {"SurveyID", "Element", "PrimaryAttribute", "SecondaryAttribute", "TertiaryAttribute", "Payload"}, {"SurveyID", "Element", "PrimaryAttribute", "SecondaryAttribute", "TertiaryAttribute", "Payload"}),
    SurveyQuestions = Table.SelectRows(SurveyElements2, each [Element] = "SQ"),
    TrashQuestionIDs = Table.SelectColumns(Table.ExpandRecordColumn(Table.ExpandListColumn(Table.SelectColumns(Table.SelectRows(Table.ExpandRecordColumn(Table.ExpandListColumn(Table.SelectRows(SurveyElements2, each [Element] = "BL"), "Payload"), "Payload", {"Type", "Description", "ID", "BlockElements"}), each [Type] = "Trash"), {"BlockElements"}), "BlockElements"), "BlockElements", {"Type", "QuestionID"}), {"QuestionID"}),
/* Modified on 2023-07-08 from https://stackoverflow.com/a/53200741 */
    SurveyQuestions2 = Table.AddColumn(SurveyQuestions, "IsInTrash", (C) => List.AnyTrue(List.Transform(TrashQuestionIDs[QuestionID], each Text.Contains(C[PrimaryAttribute], _)))),
/*    NonTrashSurveyQuestions = Table.SelectColumns(Table.SelectRows(SurveyQuestions2, each ([IsInTrash] = false)), {"SurveyID", "PrimaryAttribute", "SecondaryAttribute", "Payload"}),*/
    NonTrashSurveyQuestions = Table.SelectColumns(Table.SelectRows(SurveyQuestions2, each ([IsInTrash] = false)), {"Payload"}),
/*    NonTrashSurveyQuestionsPayload = Table.ExpandRecordColumn(NonTrashSurveyQuestions, "Payload", {"QuestionText", "DefaultChoices", "DataExportTag", "QuestionType", "Selector", "SubSelector", "Configuration", "QuestionDescription", "Choices", "ChoiceOrder", "Validation", "GradingData", "Language", "Answers", "AnswerOrder", "ChoiceDataExportTags", "QuestionID"})*/
    NonTrashSurveyQuestionsPayload = Table.ReorderColumns(Table.ExpandRecordColumn(NonTrashSurveyQuestions, "Payload", {"QuestionText", "DefaultChoices", "DataExportTag", "QuestionType", "Selector", "SubSelector", "Configuration", "QuestionDescription", "Choices", "ChoiceOrder", "Validation", "GradingData", "Language", "Answers", "AnswerOrder", "ChoiceDataExportTags", "QuestionID"}), {"QuestionID", "QuestionText", "QuestionType", "Selector", "SubSelector", "DefaultChoices", "DataExportTag", "Configuration", "QuestionDescription", "Choices", "ChoiceOrder", "Validation", "GradingData", "Language", "Answers", "AnswerOrder", "ChoiceDataExportTags"}),
/*    #"Merged Queries" = Table.NestedJoin(NonTrashSurveyQuestionsPayload, {"QuestionID"}, SurveyBlocks_FirstQuestionBlock_DisplayOrder, {"QuestionID"}, "SurveyBlocks_FirstQuestionBlock_DisplayOrder", JoinKind.RightOuter),*/
/*    #"Expanded SurveyBlocks_FirstQuestionBlock_DisplayOrder" = Table.ExpandTableColumn(#"Merged Queries", "SurveyBlocks_FirstQuestionBlock_DisplayOrder", {"QuestionDisplayOrder"}, {"QuestionDisplayOrder"})*/
    NonTrashSurveyQuestionsPayloadOrdered = Table.ExpandTableColumn(Table.NestedJoin(NonTrashSurveyQuestionsPayload, {"QuestionID"}, SurveyBlocks_FirstQuestionBlock_DisplayOrder, {"QuestionID"}, "SurveyBlocks_FirstQuestionBlock_DisplayOrder", JoinKind.RightOuter), "SurveyBlocks_FirstQuestionBlock_DisplayOrder", {"QuestionDisplayOrder"}, {"QuestionDisplayOrder"}),
    #"Sorted Rows" = Table.Sort(NonTrashSurveyQuestionsPayloadOrdered,{{"QuestionDisplayOrder", Order.Ascending}}),
    #"Expanded Choices" = Table.ExpandRecordColumn(#"Sorted Rows", "Choices", {"1", "2", "3"}, {"Choices.1", "Choices.2", "Choices.3"}),
    #"Expanded Validation" = Table.ExpandRecordColumn(#"Expanded Choices", "Validation", {"Settings"}, {"Validation.Settings"}),
    #"Expanded Validation.Settings" = Table.ExpandRecordColumn(#"Expanded Validation", "Validation.Settings", {"ForceResponse", "ForceResponseType", "Type"}, {"Validation.Settings.ForceResponse", "Validation.Settings.ForceResponseType", "Validation.Settings.Type"}),
    #"Expanded Answers" = Table.ExpandRecordColumn(#"Expanded Validation.Settings", "Answers", {"1", "2", "3", "4"}, {"Answers.1", "Answers.2", "Answers.3", "Answers.4"}),
    #"Expanded Language" = Table.ExpandListColumn(#"Expanded Answers", "Language"),
    #"Expanded GradingData" = Table.ExpandListColumn(#"Expanded Language", "GradingData"),
    #"Expanded Choices.1" = Table.ExpandRecordColumn(#"Expanded GradingData", "Choices.1", {"Display", "DisplayLogic"}, {"Choices.1.Display", "Choices.1.DisplayLogic"}),
    #"Expanded Choices.2" = Table.ExpandRecordColumn(#"Expanded Choices.1", "Choices.2", {"Display", "DisplayLogic"}, {"Choices.2.Display", "Choices.2.DisplayLogic"}),
    #"Expanded Choices.3" = Table.ExpandRecordColumn(#"Expanded Choices.2", "Choices.3", {"Display", "DisplayLogic"}, {"Choices.3.Display", "Choices.3.DisplayLogic"}),
    #"Expanded Configuration" = Table.ExpandRecordColumn(#"Expanded Choices.3", "Configuration", {"QuestionDescriptionOption", "TextPosition", "ChoiceColumnWidth", "RepeatHeaders", "WhiteSpace", "MobileFirst"}, {"Configuration.QuestionDescriptionOption", "Configuration.TextPosition", "Configuration.ChoiceColumnWidth", "Configuration.RepeatHeaders", "Configuration.WhiteSpace", "Configuration.MobileFirst"}),
    #"Expanded Choices.1.DisplayLogic" = Table.ExpandRecordColumn(#"Expanded Configuration", "Choices.1.DisplayLogic", {"0", "Type", "inPage"}, {"Choices.1.DisplayLogic.0", "Choices.1.DisplayLogic.Type", "Choices.1.DisplayLogic.inPage"}),
    #"Expanded Choices.2.DisplayLogic" = Table.ExpandRecordColumn(#"Expanded Choices.1.DisplayLogic", "Choices.2.DisplayLogic", {"0", "Type", "inPage"}, {"Choices.2.DisplayLogic.0", "Choices.2.DisplayLogic.Type", "Choices.2.DisplayLogic.inPage"}),
    #"Expanded Choices.3.DisplayLogic" = Table.ExpandRecordColumn(#"Expanded Choices.2.DisplayLogic", "Choices.3.DisplayLogic", {"0", "Type", "inPage"}, {"Choices.3.DisplayLogic.0", "Choices.3.DisplayLogic.Type", "Choices.3.DisplayLogic.inPage"}),
    #"Expanded Answers.1" = Table.ExpandRecordColumn(#"Expanded Choices.3.DisplayLogic", "Answers.1", {"Display"}, {"Answers.1.Display"}),
    #"Expanded Answers.2" = Table.ExpandRecordColumn(#"Expanded Answers.1", "Answers.2", {"Display"}, {"Answers.2.Display"}),
    #"Expanded Answers.3" = Table.ExpandRecordColumn(#"Expanded Answers.2", "Answers.3", {"Display"}, {"Answers.3.Display"}),
    #"Expanded Answers.4" = Table.ExpandRecordColumn(#"Expanded Answers.3", "Answers.4", {"Display"}, {"Answers.4.Display"}),
    #"Expanded Choices.1.DisplayLogic.0" = Table.ExpandRecordColumn(#"Expanded Answers.4", "Choices.1.DisplayLogic.0", {"0", "Type"}, {"Choices.1.DisplayLogic.0.0", "Choices.1.DisplayLogic.0.Type"}),
    #"Expanded Choices.1.DisplayLogic.0.0" = Table.ExpandRecordColumn(#"Expanded Choices.1.DisplayLogic.0", "Choices.1.DisplayLogic.0.0", {"LogicType", "QuestionID", "QuestionIsInLoop", "ChoiceLocator", "Operator", "QuestionIDFromLocator", "LeftOperand", "Type", "Description"}, {"Choices.1.DisplayLogic.0.0.LogicType", "Choices.1.DisplayLogic.0.0.QuestionID", "Choices.1.DisplayLogic.0.0.QuestionIsInLoop", "Choices.1.DisplayLogic.0.0.ChoiceLocator", "Choices.1.DisplayLogic.0.0.Operator", "Choices.1.DisplayLogic.0.0.QuestionIDFromLocator", "Choices.1.DisplayLogic.0.0.LeftOperand", "Choices.1.DisplayLogic.0.0.Type", "Choices.1.DisplayLogic.0.0.Description"}),
    #"Expanded Choices.2.DisplayLogic.0" = Table.ExpandRecordColumn(#"Expanded Choices.1.DisplayLogic.0.0", "Choices.2.DisplayLogic.0", {"0", "Type"}, {"Choices.2.DisplayLogic.0.0", "Choices.2.DisplayLogic.0.Type"}),
    #"Expanded Choices.2.DisplayLogic.0.0" = Table.ExpandRecordColumn(#"Expanded Choices.2.DisplayLogic.0", "Choices.2.DisplayLogic.0.0", {"LogicType", "QuestionID", "QuestionIsInLoop", "ChoiceLocator", "Operator", "QuestionIDFromLocator", "LeftOperand", "Type", "Description"}, {"Choices.2.DisplayLogic.0.0.LogicType", "Choices.2.DisplayLogic.0.0.QuestionID", "Choices.2.DisplayLogic.0.0.QuestionIsInLoop", "Choices.2.DisplayLogic.0.0.ChoiceLocator", "Choices.2.DisplayLogic.0.0.Operator", "Choices.2.DisplayLogic.0.0.QuestionIDFromLocator", "Choices.2.DisplayLogic.0.0.LeftOperand", "Choices.2.DisplayLogic.0.0.Type", "Choices.2.DisplayLogic.0.0.Description"}),
    #"Expanded Choices.3.DisplayLogic.0" = Table.ExpandRecordColumn(#"Expanded Choices.2.DisplayLogic.0.0", "Choices.3.DisplayLogic.0", {"0", "Type"}, {"Choices.3.DisplayLogic.0.0", "Choices.3.DisplayLogic.0.Type"}),
    #"Expanded Choices.3.DisplayLogic.0.0" = Table.ExpandRecordColumn(#"Expanded Choices.3.DisplayLogic.0", "Choices.3.DisplayLogic.0.0", {"LogicType", "QuestionID", "QuestionIsInLoop", "ChoiceLocator", "Operator", "QuestionIDFromLocator", "LeftOperand", "Type", "Description"}, {"Choices.3.DisplayLogic.0.0.LogicType", "Choices.3.DisplayLogic.0.0.QuestionID", "Choices.3.DisplayLogic.0.0.QuestionIsInLoop", "Choices.3.DisplayLogic.0.0.ChoiceLocator", "Choices.3.DisplayLogic.0.0.Operator", "Choices.3.DisplayLogic.0.0.QuestionIDFromLocator", "Choices.3.DisplayLogic.0.0.LeftOperand", "Choices.3.DisplayLogic.0.0.Type", "Choices.3.DisplayLogic.0.0.Description"}),
/*    #"Expanded ChoiceDataExportTags" = Table.ExpandRecordColumn(#"Expanded Choices.3.DisplayLogic.0.0", "ChoiceDataExportTags", {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25"})*/
    #"Expanded ChoiceDataExportTags" = Table.ExpandRecordColumn(#"Expanded Choices.3.DisplayLogic.0.0", "ChoiceDataExportTags", {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25"}, {"ChoiceDataExportTags.0", "ChoiceDataExportTags.1", "ChoiceDataExportTags.2", "ChoiceDataExportTags.3", "ChoiceDataExportTags.4", "ChoiceDataExportTags.5", "ChoiceDataExportTags.6", "ChoiceDataExportTags.7", "ChoiceDataExportTags.8", "ChoiceDataExportTags.9", "ChoiceDataExportTags.10", "ChoiceDataExportTags.11", "ChoiceDataExportTags.12", "ChoiceDataExportTags.13", "ChoiceDataExportTags.14", "ChoiceDataExportTags.15", "ChoiceDataExportTags.16", "ChoiceDataExportTags.17", "ChoiceDataExportTags.18", "ChoiceDataExportTags.19", "ChoiceDataExportTags.20", "ChoiceDataExportTags.21", "ChoiceDataExportTags.22", "ChoiceDataExportTags.23", "ChoiceDataExportTags.24", "ChoiceDataExportTags.25"})
in
    #"Expanded ChoiceDataExportTags"












